#include <iostream>
#include <iomanip>
#include <ctime>
#include <cstdlib>
#include <stdio.h>
#include <time.h>
#include <stdint.h>
#include <limits>
using namespace std;const int16_t elections=500;void beforeIntroduction(){cout<<"This program simulates voting in 500 districts, where the actual"<<"\noutcome of the election should be exactly 50.5% for "<<"candidate A, \n"<<"and 49.5% for candidate B. This program will"<<"randomly produce an error\n"<<"dependent on the machine error "<<"given.This program will also ask for a \n"<<"margin of error, "<<"and will use this value to determine whether or not the\n"<<"program witnessed an error.\n"<<endl;}void introduction(){cout<<"Enter voting simulation parameters. All values must be "<<"positive\n and greater than 0. Margin and error are entered as"<<" percentages (do not use the % sign) \nand cannot exceed 100."<<endl;return;}void filter_nvotes(int64_t& nvotes){while(nvotes<1){cout<<"Please enter something else (you must enter something"<<" greater than 1): "<<flush;cin>>nvotes;}return;}void filter_margin(int32_t& margin){while((margin<1)||(margin>50)){cout<<"Please enter something else (you must enter something"<<" greater than 1, but less than 50): "<<flush;cin>>margin;}return;}void filter_machineError(int32_t& machineError){while((machineError<1)||(machineError>100)){cout<<"Please enter something else (you must enter something"<<" greater than 1, but less than 100): "<<flush;cin>>machineError;}return;}void get_params(int64_t& nvotes,int32_t& margin,int32_t&machineError){cout<<"\nEnter the total number of votes cast: "<<flush;cin>>nvotes;filter_nvotes(nvotes);cout<<"Enter the election margin percentage: "<<flush;cin>>margin;filter_margin(margin);cout<<"Enter voting machine error percentage: "<<flush;cin>>machineError;filter_machineError(machineError);return;}void display_summary(int64_t nvotes,int32_t margin,int32_t machineError,int16_t numError,double errorValue){cout<<"** Election Machine Summary **\n"<<"\nNumber of votes: "<<nvotes<<"\nElection margin: "<<margin<<"%"<<"\nMachine error rate: "<<machineError<<"%\n\n"<<"For "<<elections<<" runs, "<<numError<<" incorrect elections occurred, for an error rate of "<<errorValue<<"%\n"<<endl;return;}void calc_error(int64_t votes[][2],int64_t nvotes,int32_t margin,int32_t machineError){int16_t numError=0;double errorValue=0;for(int16_t i=0;i<elections;i++){if(margin<abs(static_cast<int64_t>(((votes[i][0]-.505*static_cast<double>(nvotes))/(.505*static_cast<double>(nvotes))*100)))){numError++;}}errorValue=(static_cast<double>(numError)/static_cast<double>(elections))*100.0;display_summary(nvotes,margin,machineError,numError,errorValue);return;}void voting(int64_t votes[][2],int64_t nvotes,int32_t margin,int32_t machineError){int64_t votesForHilary=0;int64_t votesForDonald=0;srand(unsigned(time(NULL)));for(int16_t i=0;i<elections;i++){votesForHilary=0;votesForDonald=0;int64_t j=0;for(j;j<static_cast<int64_t>((nvotes*.505));j++){if((rand()%1000)<machineError * 10){votesForDonald++;}else{votesForHilary++;}}for(j;j<nvotes;j++){if((rand()%1000)<machineError*10){votesForHilary++;}else{votesForDonald++;}}votes[i][0]=votesForHilary;votes[i][1]=votesForDonald;}calc_error(votes,nvotes,margin,machineError);return;}void askToContinue(bool& carryOn){char runAnother='N';cout<<"\nDo you wish to Continue? (Y/N): "<<flush;cin>> runAnother;runAnother=toupper(runAnother);while((runAnother!='Y')&&(runAnother!='N')){cout<<"Sorry but that was not recognized (Y/N): "<<flush;cin>>runAnother;runAnother=toupper(runAnother);}if (runAnother == 'N'){carryOn = false;}else{carryOn=true;}return;}void loopy(int64_t nvotes,int32_t margin, int32_t machineError,int64_t votes[][2]) {bool carryOn = true;do{introduction();get_params(nvotes,margin,machineError);voting(votes,nvotes,margin,machineError);askToContinue(carryOn);} while(carryOn);return;}int main(){int64_t nvotes=0;int32_t margin=0;int32_t machineError=0;int64_t votes[elections][2];beforeIntroduction();loopy(nvotes,margin,machineError,votes);return 0;}